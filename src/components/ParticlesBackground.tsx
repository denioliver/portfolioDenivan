import { useCallback } from "react";
import type { Engine } from "@tsparticles/engine";
import Particles from "@tsparticles/react";
import { loadSlim } from "@tsparticles/slim";
import styled from 'styled-components';
import { particlesConfig } from '../utils/animations';

// ðŸŒŒ Container para as partÃ­culas com posicionamento absoluto
const ParticlesContainer = styled.div`
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  pointer-events: none;
  
  canvas {
    position: absolute !important;
    top: 0;
    left: 0;
    width: 100% !important;
    height: 100% !important;
  }
`;

interface ParticlesBackgroundProps {
  id?: string;
}

/**
 * ðŸŽ† Componente de fundo animado com partÃ­culas interativas
 * 
 * CaracterÃ­sticas:
 * - Rede de pontos conectados que reagem ao mouse
 * - Performance otimizada com TSParticles Slim
 * - Cores que combinam com o tema do portfÃ³lio
 * - Responsivo e nÃ£o interfere na navegaÃ§Ã£o
 */
export const ParticlesBackground = ({ id = "tsparticles" }: ParticlesBackgroundProps) => {
  // ðŸ”§ InicializaÃ§Ã£o do engine de partÃ­culas (apenas uma vez)
  const particlesInit = useCallback(async (engine: Engine) => {
    console.log("ðŸŽ† Inicializando Particles Engine...");
    await loadSlim(engine);
  }, []);

  // âœ… Callback quando as partÃ­culas estÃ£o carregadas
  const particlesLoaded = useCallback(async (container: unknown) => {
    console.log("âœ¨ Particles carregadas com sucesso!", container);
  }, []);

  return (
    <ParticlesContainer>
      <Particles
        id={id}
        init={particlesInit}
        loaded={particlesLoaded}
        options={particlesConfig}
      />
    </ParticlesContainer>
  );
};
