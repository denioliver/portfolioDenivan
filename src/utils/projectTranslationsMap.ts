// üåç Sistema de tradu√ß√£o autom√°tica baseado em c√≥digo dos projetos

export interface ProjectTranslation {
  name: string;
  description: string;
}

export interface ProjectTranslations {
  pt: ProjectTranslation;
  en: ProjectTranslation;
  es: ProjectTranslation;
}

// üìã Mapeamento de c√≥digos de projetos para tradu√ß√µes
export const projectTranslationsMap: Record<string, ProjectTranslations> = {
  // === CALCULADORA ===
  calc: {
    pt: {
      name: "Calculadora",
      description: "Calculadora funcional com opera√ß√µes b√°sicas, desenvolvida com componentes reutiliz√°veis e gerenciamento de estado via React. Interface limpa, responsiva e l√≥gica matem√°tica 100% funcional."
    },
    en: {
      name: "Calculator",
      description: "Functional calculator with basic operations, developed with reusable components and state management via React. Clean, responsive interface with 100% functional mathematical logic."
    },
    es: {
      name: "Calculadora",
      description: "Calculadora funcional con operaciones b√°sicas, desarrollada con componentes reutilizables y gesti√≥n de estado v√≠a React. Interfaz limpia, responsiva y l√≥gica matem√°tica 100% funcional."
    }
  },

  // === SISTEMA DE AGENDAMENTO PARA TATUAGEM ===
  agendaTattoo: {
    pt: {
      name: "Sistema de Agendamento para Est√∫dio de Tatuagem",
      description: "Aplica√ß√£o web desenvolvida para facilitar o agendamento de sess√µes de tatuagem, tanto para clientes quanto para tatuadores. A plataforma permite aos clientes escolherem hor√°rios dispon√≠veis, visualizar portf√≥lios dos tatuadores e enviar detalhes da tatuagem desejada."
    },
    en: {
      name: "Tattoo Studio Scheduling System",
      description: "Web application developed to facilitate tattoo session scheduling for both clients and tattoo artists. The platform allows clients to choose available times, view artist portfolios and send details of the desired tattoo."
    },
    es: {
      name: "Sistema de Reservas para Estudio de Tatuajes",
      description: "Aplicaci√≥n web desarrollada para facilitar la programaci√≥n de sesiones de tatuajes tanto para clientes como para tatuadores. La plataforma permite a los clientes elegir horarios disponibles, ver portafolios de tatuadores y enviar detalles del tatuaje deseado."
    }
  },

  // === PORTF√ìLIO ANTIGO ===
  portfolioOld: {
    pt: {
      name: "Portf√≥lio Antigo",
      description: "Portf√≥lio criado quando estava iniciando meus estudos em ReactJs"
    },
    en: {
      name: "Old Portfolio",
      description: "Portfolio created when I was starting my studies in ReactJs"
    },
    es: {
      name: "Portafolio Antiguo",
      description: "Portafolio creado cuando estaba iniciando mis estudios en ReactJs"
    }
  },

  // === CAT√ÅLOGO NICK FESTAS ===
  nickFestas: {
    pt: {
      name: "Cat√°logo Nick Festas ‚Äì Cat√°logo de Produtos",
      description: "Site institucional com listagem din√¢mica de produtos. Layout leve, responsivo e f√°cil de atualizar. Demonstra uso de props, mapeamento de arrays e estiliza√ß√£o modular em React."
    },
    en: {
      name: "Nick Parties Catalog ‚Äì Product Catalog",
      description: "Institutional website with dynamic product listing. Light, responsive layout that's easy to update. Demonstrates use of props, array mapping and modular styling in React."
    },
    es: {
      name: "Cat√°logo Nick Fiestas ‚Äì Cat√°logo de Productos",
      description: "Sitio web institucional con listado din√°mico de productos. Dise√±o ligero, responsivo y f√°cil de actualizar. Demuestra el uso de props, mapeo de arrays y estilizaci√≥n modular en React."
    }
  },

  // === DESAFIO PSEL FRONT - API IBGE ===
  pselIbge: {
    pt: {
      name: "Desafio Psel Front ‚Äì Consumo da API do IBGE",
      description: "Aplica√ß√£o criada como desafio t√©cnico de processo seletivo. Consome dados da API do IBGE, exibindo estados e cidades dinamicamente. Estrutura baseada em hooks, tipagem com TypeScript e boas pr√°ticas de manipula√ß√£o de dados ass√≠ncronos."
    },
    en: {
      name: "Frontend Challenge ‚Äì IBGE API Consumption",
      description: "Application created as a technical challenge for a selection process. Consumes data from the IBGE API, dynamically displaying states and cities. Structure based on hooks, TypeScript typing and best practices for asynchronous data handling."
    },
    es: {
      name: "Desaf√≠o Frontend ‚Äì Consumo de API del IBGE",
      description: "Aplicaci√≥n creada como desaf√≠o t√©cnico de proceso selectivo. Consume datos de la API del IBGE, mostrando estados y ciudades din√°micamente. Estructura basada en hooks, tipado con TypeScript y buenas pr√°cticas de manejo de datos as√≠ncronos."
    }
  },

  // === PROJETO TESTE ===
  teste: {
    pt: {
      name: "Projeto Teste",
      description: "Projeto criado para testar o sistema de tradu√ß√£o autom√°tica. Demonstra a funcionalidade de traduzir novos projetos automaticamente com base no c√≥digo."
    },
    en: {
      name: "Test Project",
      description: "Project created to test the automatic translation system. Demonstrates the functionality of automatically translating new projects based on code."
    },
    es: {
      name: "Proyecto Prueba",
      description: "Proyecto creado para probar el sistema de traducci√≥n autom√°tica. Demuestra la funcionalidad de traducir autom√°ticamente nuevos proyectos basados en c√≥digo."
    }
  },

  // === SISTEMA GEN√âRICO (FALLBACK) ===
  sistema: {
    pt: {
      name: "Sistema Web",
      description: "Sistema web desenvolvido com tecnologias modernas para solucionar problemas espec√≠ficos."
    },
    en: {
      name: "Web System",
      description: "Web system developed with modern technologies to solve specific problems."
    },
    es: {
      name: "Sistema Web",
      description: "Sistema web desarrollado con tecnolog√≠as modernas para resolver problemas espec√≠ficos."
    }
  },

  // === APP GEN√âRICO (FALLBACK) ===
  app: {
    pt: {
      name: "Aplica√ß√£o Web",
      description: "Aplica√ß√£o web moderna desenvolvida com foco na experi√™ncia do usu√°rio."
    },
    en: {
      name: "Web Application",
      description: "Modern web application developed with focus on user experience."
    },
    es: {
      name: "Aplicaci√≥n Web",
      description: "Aplicaci√≥n web moderna desarrollada con enfoque en la experiencia del usuario."
    }
  },

  // === PROJETO GEN√âRICO (FALLBACK) ===
  projeto: {
    pt: {
      name: "Projeto Web",
      description: "Projeto desenvolvido utilizando as melhores pr√°ticas de desenvolvimento web."
    },
    en: {
      name: "Web Project",
      description: "Project developed using web development best practices."
    },
    es: {
      name: "Proyecto Web",
      description: "Proyecto desarrollado utilizando las mejores pr√°cticas de desarrollo web."
    }
  }
};

// üîÑ Fun√ß√£o para obter tradu√ß√£o baseada no c√≥digo
export const getProjectTranslation = (
  code: string | undefined,
  originalTitle: string,
  originalDescription: string,
  language: 'pt' | 'en' | 'es' = 'pt'
): { name: string; description: string } => {

  // Se n√£o tem c√≥digo, tenta fazer tradu√ß√£o autom√°tica baseada no t√≠tulo
  if (!code) {
    return autoTranslateProject(originalTitle, originalDescription, language);
  }

  // Verifica se existe tradu√ß√£o para o c√≥digo
  const translation = projectTranslationsMap[code];
  if (translation) {
    return {
      name: translation[language].name,
      description: translation[language].description
    };
  }

  // Se n√£o encontrou tradu√ß√£o espec√≠fica, tenta tradu√ß√£o autom√°tica
  return autoTranslateProject(originalTitle, originalDescription, language);
};

// ü§ñ Sistema de tradu√ß√£o autom√°tica (fallback)
const autoTranslateProject = (
  title: string,
  description: string,
  language: 'pt' | 'en' | 'es'
): { name: string; description: string } => {

  if (language === 'pt') {
    return { name: title, description };
  }

  // Tradu√ß√µes autom√°ticas b√°sicas
  const translateText = (text: string, targetLang: 'en' | 'es'): string => {
    let translated = text;

    const translations = targetLang === 'en' ? {
      // PT -> EN
      'Sistema': 'System', 'Aplica√ß√£o': 'Application', 'App': 'App',
      'Projeto': 'Project', 'Site': 'Website', 'Portal': 'Portal',
      'Dashboard': 'Dashboard', 'Plataforma': 'Platform', 'Loja': 'Store',
      'E-commerce': 'E-commerce', 'Blog': 'Blog', 'API': 'API',
      'Gerenciador': 'Manager', 'Calculadora': 'Calculator',
      'Conversor': 'Converter', 'Editor': 'Editor', 'Cat√°logo': 'Catalog',
      'Portf√≥lio': 'Portfolio', 'desenvolvido': 'developed', 'criado': 'created',
      'aplica√ß√£o': 'application', 'sistema': 'system', 'projeto': 'project',
      'funcional': 'functional', 'responsivo': 'responsive', 'moderno': 'modern',
      'completo': 'complete', 'simples': 'simple', 'avan√ßado': 'advanced',
      'din√¢mico': 'dynamic', 'interativo': 'interactive', 'com': 'with',
      'para': 'for', 'usando': 'using', 'utilizando': 'using', 'Teste': 'Test'
    } : {
      // PT -> ES
      'Sistema': 'Sistema', 'Aplica√ß√£o': 'Aplicaci√≥n', 'App': 'App',
      'Projeto': 'Proyecto', 'Site': 'Sitio', 'Portal': 'Portal',
      'Dashboard': 'Dashboard', 'Plataforma': 'Plataforma', 'Loja': 'Tienda',
      'E-commerce': 'E-commerce', 'Blog': 'Blog', 'API': 'API',
      'Gerenciador': 'Gestor', 'Calculadora': 'Calculadora',
      'Conversor': 'Convertidor', 'Editor': 'Editor', 'Cat√°logo': 'Cat√°logo',
      'Portf√≥lio': 'Portafolio', 'desenvolvido': 'desarrollado', 'criado': 'creado',
      'aplica√ß√£o': 'aplicaci√≥n', 'sistema': 'sistema', 'projeto': 'proyecto',
      'funcional': 'funcional', 'responsivo': 'responsivo', 'moderno': 'moderno',
      'completo': 'completo', 'simples': 'simple', 'avan√ßado': 'avanzado',
      'din√¢mico': 'din√°mico', 'interativo': 'interactivo', 'com': 'con',
      'para': 'para', 'usando': 'usando', 'utilizando': 'utilizando', 'Teste': 'Prueba'
    };

    Object.entries(translations).forEach(([pt, target]) => {
      translated = translated.replace(new RegExp(`\\b${pt}\\b`, 'gi'), target);
    });

    return translated;
  };

  return {
    name: translateText(title, language),
    description: translateText(description, language)
  };
};
